#!/usr/bin/env python3

# import modules
import argparse
from PIL import Image
import qrcode


# executes when your script is called from the command-line
if __name__ == "__main__":

	parser = argparse.ArgumentParser(description='Embed a logo in a QR code')

	# arg for logo image
	parser.add_argument("logo", default='logo.png', help='The logo image to embed in the QR code')
	# arg for URL or text
	parser.add_argument("url", default='https://www.geeksforgeeks.org/', help='The URL or text to encode in the QR code')	
	# arg for color
	parser.add_argument("color", default='Green', help='The color of the QR code')
	# arg for base width
	parser.add_argument("basewidth", default=100, help='The base width of the logo image')	
	
	# parse the arguments
	args = parser.parse_args()

	# load the logo image
	logo = Image.open(args.logo)

	# adjust image size
	wpercent = (int(args.basewidth)/float(logo.size[0]))
	hsize = int((float(logo.size[1])*float(wpercent)))
	logo = logo.resize((int(args.basewidth), hsize))
	QRcode = qrcode.QRCode(
		error_correction=qrcode.constants.ERROR_CORRECT_H
	)

	# adding URL or text to QRcode
	QRcode.add_data(args.url)

	# generating QR code
	QRcode.make()

	# adding color to QR code
	QRimg = QRcode.make_image(
		fill_color=args.color, back_color="white").convert('RGB')

	# set size of QR code
	pos = ((QRimg.size[0] - logo.size[0]) // 2,
		(QRimg.size[1] - logo.size[1]) // 2)
	QRimg.paste(logo, pos)

	# save the QR code generated
	QRimg.save(f"{args.logo}with_QR.png")

	print('QR code generated!')
